name: Build

on:
  # New version.
  push:
    tags:
      - v*

  # Manual trigger.
  workflow_dispatch:

jobs:
  flatpak:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/flathub-infra/flatpak-github-actions:freedesktop-24.08
      options: --privileged

    steps:
      - name: Set dynamic env vars
        run: |
          REPO_NAME="${GITHUB_REPOSITORY##*/}"
          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV
          echo "REPO_NAME_LOWER=$(echo "$REPO_NAME" | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 23

      - name: Install dependencies
        run: |
          curl https://download.docker.com/linux/static/stable/x86_64/docker-28.1.1.tgz --output ./docker.tgz
          tar xzvf docker.tgz
          mv docker/* /usr/bin

          curl -L https://github.com/regclient/regclient/releases/download/v0.8.1/regctl-linux-amd64 > regctl
          chmod 755 regctl
          mv regctl /usr/bin

      - name: Run local server
        uses: JarvusInnovations/background-action@v1
        with:
          working-directory: downloadserver
          wait-on: http-get://localhost:5173/info
          run: |
            npm ci
            npm run start

      - name: Test local server
        run: curl http://localhost:5173/info

      - name: Build
        uses: flatpak/flatpak-github-actions/flatpak-builder@v6
        with:
          branch: stable
          manifest-path: ${{ env.REPO_NAME }}.yml
          build-bundle: false

      - name: Build image
        run: |
          flatpak build-bundle ./repo ./image $REPO_NAME stable --oci

      - name: Login to registry
        uses: docker/login-action@v3
        with:
          registry: artifacts.flat.software
          username: ${{ vars.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Push
        run: |
          echo "Update index."
          jq '.manifests[0].annotations["org.opencontainers.image.ref.name"] = "repo/$REPO_NAME_LOWER:stable"' ./image/index.json > tmp.json
          mv tmp.json ./image/index.json

          echo "Get variables."
          version=$(xmllint --xpath 'string(//release[1]/@version)' $REPO_NAME.metainfo.xml)

          echo "Copy latest."
          regctl image copy ocidir://image:stable "artifacts.flat.software/flatpaks/$REPO_NAME_LOWER:latest"

          echo "Copy stable."
          regctl image copy ocidir://image:stable "artifacts.flat.software/flatpaks/$REPO_NAME_LOWER:stable"

          echo "Copy $version."
          regctl image copy ocidir://image:stable "artifacts.flat.software/flatpaks/$REPO_NAME_LOWER:$version"
